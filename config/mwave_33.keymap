#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  macros {
        ZMK_MACRO(ble_zero,
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        )
        ZMK_MACRO(ble_one,
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        )
    };

    endpoint_sideband_behaviors {
        compatible = "zmk,kscan-sideband-behaviors";
        kscan = <&kscan_sp3t_toggle>;

        first_toggle_sideband: first_toggle_sideband {
            column = <0>;
            bindings = <&out OUT_USB>;
        };

        second_toggle_sideband: second_toggle_sideband {
            column = <1>;
            bindings = <&ble_zero>;
        };

        third_toggle_sideband: third_toggle_sideband {
            column = <2>;
            bindings = <&ble_one>;
        };
    };

  keymap {
    compatible = "zmk,keymap";
    default_layer {
        // -------------------------------------------------------------------------------------------------------
        // | ESC | F1  | F2  | F3  | F4  | F5  | F6  | | F7  | F8  | F9  | F10 | F11 | F12 |HOME| END |PSCN|  1  |
        // |GRAVE|  1  |  2  |  3  |  4  |  5  |  6  | |   7   |  8  |  9  |  0  |  -  |  =  |    BKSP     | DEL |
        // | TAB    |  Q  |  W  |  E  |  R  |   T    | |   Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   \    |     |
        // | CAPS     |  A  |  S  |  D  |  F  |  G   | |  H    |  J  |  K  |  L  |  ;  |  '  |    ENTER    | PGUP|
        // |   SHIFT   |  Z  |  X  |  C  |  V  |  B  | |    N    |  M  |  ,  |  .  |  /  |   SHIFT   | UP  | PGDN|
        // |  CTL  |  WIN  |  ALT  |      SPACE      | |      SPACE        | ALT | MENU |RCTRL| LEFT| DOWN |RIGHT|
        // -------------------------------------------------------------------------------------------------------
      bindings = <
        &kp ESC   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp HOME &kp END &kp PSCRN &mo 1
        &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6    &kp N7   &kp N8 &kp N9 &kp N0 &kp MINUS &kp EQUAL      &kp BSPC
        &kp TAB     &kp Q  &kp W  &kp E  &kp R  &kp T             &kp Y  &kp U  &kp I    &kp O  &kp P  &kp LBKT &kp RBKT &kp BSLH &kp DEL
        &kp CLCK      &kp A  &kp S  &kp D  &kp F    &kp G          &kp H  &kp J  &kp K    &kp L  &kp SEMI &kp SQT    &kp RET    &kp PG_UP
        &kp LSHFT     &kp Z  &kp X  &kp C  &kp V  &kp B         &kp N    &kp M  &kp COMMA &kp DOT &kp FSLH   &kp RSHFT   &kp UP &kp PG_DN
        &kp LCTRL &kp LGUI &kp LALT            &kp SPACE         &kp SPACE     &kp RALT  &kp C_MENU &kp RCTRL &kp LEFT &kp DOWN &kp RIGHT
      >;
    };
    raise {

      bindings = <
        &none &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_PREV &kp C_PP &kp C_NEXT &bl BL_CYCLE  &kp C_AL_CALC &kp C_BRI_DN  &kp C_BRI_UP &kp C_AC_SEARCH &bt BT_CLR &none &none &none &mo 1
        &none &none &none &none &none &none &none &none &none   &none &none &none &none &none
        &none   &none  &none  &none  &none  &none  &none  &none  &none   &none &none  &none &none &none &none
        &none   &none  &none  &none  &none  &none  &none  &none  &none    &none &none &none         &none &none
        &none     &none  &none  &none  &none  &none  &none  &none  &none &none &none   &none   &none &none
        &none &none &none            &none                &none    &none  &none &none &none &none &none
      >;
    };
  };
};