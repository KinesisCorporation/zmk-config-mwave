#include <dt-bindings/advertising_mode.h>
#include <behaviors/advertising_mode.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>


/ {
    #include "mwave_prim.dtsi"
    macros {
      Win_Cut: Windows_Cut {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LC(X)>;
          display-name = "Windows Cut";
      };

      Win_Copy: Windows_Copy {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LC(C)>;
          display-name = "Windows Copy";
      };

      Win_Paste: Windows_Paste {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LC(V)>;
          display-name = "Windows Paste";
      };

      Win_SelAll: Windows_SelectAll {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LC(A)>;
          display-name = "Windows Select All";
      };

      Win_Undo: Windows_Undo {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LC(A)>;
          display-name = "Windows Undo";
      };

      Win_LastWin: Win_AltTab {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LA(TAB)>;
          display-name = "Windows Alt+Tab";
      };

      Win_Desktp: Win_Desk {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LG(D)>;
          display-name = "Windows Desktop";
      };

      Win_Explr: Win_Explr {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LG(E)>;
          display-name = "Windows Explorer";
      };

      Win_Snip: Win_Snip {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LS(LG(S))>;
          display-name = "Windows Screen Snip";
      };

      Win_ShowAW: Win_ShowAW {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LG(S)>;
          display-name = "Windows Show All Windows";
      };

      Mac_Cut: Mac_Cut {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LG(X)>;
          display-name = "Mac Cut";
      };

      Mac_Copy: Mac_Copy {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LG(C)>;
          display-name = "Mac Copy";
      };

      Mac_Paste: Mac_Paste {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LG(V)>;
          display-name = "Mac Paste";
      };

      Mac_Undo: Mac_Undo {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LG(V)>;
          display-name = "Mac Undo";
      };

      Mac_SelAll: Mac_SelAll {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LG(A)>;
          display-name = "Mac Select All";
      };

      Mac_LastWin: Mac_LastWin {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LG(TAB)>;
          display-name = "Mac Last Window";
      };

      Mac_MissC: Mac_ShowAW {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LC(UP_ARROW)>;
          display-name = "Mac Show All Windoes";
      };

      Mac_Snip: Mac_Snip {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings = <&kp LC(LG(LS(NUMBER_4)))>;
          display-name = "Mac Screen Snip";
      };
  };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
          display-name = "Base";
            // -------------------------------------------------------------------------------------------------------
            // | ESC | F1  | F2  | F3  | F4  | F5  | F6  | | F7  | F8  | F9  | F10 | F11 | F12 |HOME| END |PSCN|  1  |
            // |GRAVE|  1  |  2  |  3  |  4  |  5  |  6  | |   7   |  8  |  9  |  0  |  -  |  =  |    BKSP     | DEL |
            // | TAB    |  Q  |  W  |  E  |  R  |   T    | |   Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   \    |     |
            // | CAPS     |  A  |  S  |  D  |  F  |  G   | |  H    |  J  |  K  |  L  |  ;  |  '  |    ENTER    | PGUP|
            // |   SHIFT   |  Z  |  X  |  C  |  V  |  B  | |    N    |  M  |  ,  |  .  |  /  |   SHIFT   | UP  | PGDN|
            // |  CTL  |  WIN  |  ALT  |      SPACE      | |      SPACE        | ALT | MENU |RCTRL| LEFT| DOWN |RIGHT|
            // -------------------------------------------------------------------------------------------------------

            bindings = <
&kp ESC    &kp F1    &kp F2    &kp F3     &kp F4     &kp F5    &kp F6       &kp F7     &kp F8     &kp F9    &kp F10    &kp F11    &kp F12    &kp HOME   &kp END  &kp INSERT  &tog 1
&kp GRAVE  &kp N1    &kp N2    &kp N3     &kp N4     &kp N5    &kp N6       &kp N7     &kp N8     &kp N9    &kp N0     &kp MINUS  &kp EQUAL  &kp BSPC
&kp TAB    &kp Q     &kp W     &kp E      &kp R      &kp T     &kp Y        &kp U      &kp I      &kp O     &kp P      &kp LBKT   &kp RBKT   &kp BSLH   &kp DEL
&kp CLCK   &kp A     &kp S     &kp D      &kp F      &kp G     &kp H        &kp J      &kp K      &kp L     &kp SEMI   &kp SQT    &kp RET    &kp PG_UP
&kp LSHFT  &kp Z     &kp X     &kp C      &kp V      &kp B     &kp N        &kp M      &kp COMMA  &kp DOT   &kp FSLH   &kp RSHFT  &kp UP     &kp PG_DN
&kp LCTRL  &kp LGUI  &kp LALT  &kp SPACE  &kp SPACE  &kp RALT  &kp K_CMENU  &kp RCTRL  &kp LEFT   &kp DOWN  &kp RIGHT
            >;
        };

        raise {
          display-name = "Fn";
            bindings = <
&trans          &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV  &kp C_PP  &kp C_NEXT  &bl BL_CYCLE  &kp LG(D)  &kp LS(LG(S))  &kp LG(TAB)      &kp LG(S)  &bt BT_CLR  &kp SCROLLLOCK  &kp PAUSE_BREAK  &kp KP_NUMLOCK  &trans
&none           &none       &none         &none         &none       &none     &none       &none       &none      &kp KP_DIVIDE  &kp KP_MULTIPLY  &none      &none       &trans
&trans          &none       &none         &none         &none       &none     &none       &kp KP_N7   &kp KP_N8  &kp KP_N9      &kp KP_MINUS     &none      &none       &none           &trans
&studio_unlock  &none       &none         &none         &none       &none     &none       &kp KP_N4   &kp KP_N5  &kp KP_N6      &kp KP_PLUS      &none      &trans      &trans
&none           &none       &none         &none         &macro_ver  &none     &none       &kp KP_N1   &kp KP_N2  &kp KP_N3      &kp KP_ENTER     &none      &trans      &trans
&none           &none       &none         &trans        &kp KP_N0   &none     &kp KP_DOT  &none       &trans     &trans         &trans
            >;
        };
        extra1 {
          display-name="Extra";
            status = "reserved";
          };
          extra2 {
            display-name="Extra";
            status = "reserved";
          };
          extra3 {
            display-name="Extra";
            status = "reserved";
          };
          extra4 {
            display-name="Extra";
            status = "reserved";
          };
          extra5 {
            display-name="Extra";
            status = "reserved";
          };
          extra6 {
            display-name="Extra";
            status = "reserved";
          };
    };
};
